# PROJECT
variable "projects" {
  type = list(object({
    project_name        = string
    project_id          = string
    folder_id           = string
    billing_account     = string
    labels              = map(any)
    auto_create_network = optional(bool, false)
    project_apis        = list(string)
  }))
}

# Service Account
variable "sa" {
  type = list(object({
    sa_id        = string
    display_name = string
    project_id   = string
    role_bind = optional(list(object({
      role_id = string
      members = list(string)
    })))
  }))
  default = []
}

# BQ Datasets
variable "bq_datasets" {
  type = list(object({
    dataset_id                  = string
    dataset_name                = string
    project_id                  = string
    description                 = string
    location                    = string
    default_table_expiration_ms = optional(number, null)
    access                      = any
    dataset_labels              = map(string)
    role_bind_dataset = list(object({
      role    = string
      members = list(string)
    }))
    roles = optional(any, [])
    authorized_datasets = optional(list(object({
      dataset_id = string
      project_id = string
    })), [])
  }))
}



# Exchanges
variable "exchanges" {
  description = "List of exchanges"
  type = list(object({
    project_id      = string
    location        = string
    exchange_id     = string
    display_name    = string
    description     = string
    primary_contact = string
    iam_role        = string
    iam_members     = list(string)
  }))
}

# Listings
variable "listings" {
  type = list(object({
    project_id       = string
    location         = string
    exchange_id      = string
    listing_id       = string
    display_name     = string
    description      = string
    datasets_project = string
    dataset_name     = string
    primary_contact  = string
    iam_role         = string
    iam_members      = list(string)
  }))
}